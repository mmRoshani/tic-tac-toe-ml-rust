import { Button, StandardButton, VerticalBox, LineEdit, HorizontalBox, TextEdit} from "std-widgets.slint";


struct TileData {
    image: image,
    image_visible: bool,
    solved: bool,
    key: int,
}

component MemoryTile inherits Rectangle {
    callback clicked;
    in property <bool> open_curtain;
    in property <image> image;
    in property <bool> solved;
    in property <int> key;

    height: 64px;
    width: 64px;
    background: solved ? #34CE57 : #3960D5;
    animate background { duration: 800ms; }

    Image {
        source: image;
        width: parent.width;
        height: parent.height;
    }

        // Left curtain
    Rectangle {
        background: #193076;
        x: 0px;
        width: open_curtain ? 0px : (parent.width / 2);
        height: parent.height;
        animate width { duration: 250ms; easing: ease-in; }
    }

    // Right curtain
    Rectangle {
        background: #193076;
        x: open_curtain ? parent.width : (parent.width / 2);
        width: open_curtain ? 0px : (parent.width / 2);
        height: parent.height;
        animate width { duration: 250ms; easing: ease-in; }
        animate x { duration: 250ms; easing: ease-in; }
    }

    TouchArea {
        clicked => {
            // Delegate to the user of this element
            if !solved {  // change after cleared the statue
              root.clicked();
            }
        }
    }
}
export component MainWindow inherits Window {
    callback play(int);
    in property <bool> disable_tiles;
    in property <string> text;
 
    width: 212px;
    height: 212px;
    background: #313e50;

    in-out property <[TileData]> memory_tiles: [
        { key: 0},
        { key: 1},
        { key: 2},
        { key: 3},
        { key: 4},
        { key: 5},
        { key: 6},
        { key: 7},
        { key: 8},
    ];

    for tile[i] in memory_tiles : MemoryTile {
        x: mod(i, 3) * 74px;
        y: floor(i / 3) * 74px;
        width: 64px;
        height: 64px;
        image: tile.image;
        open_curtain: tile.image_visible || tile.solved;
        solved: tile.solved;
        clicked => {
            if (!root.disable_tiles) {
                tile.image_visible = true; // change after cleared the statue
                tile.solved = true;
                root.play(tile.key);
            }
        }
    }

}

